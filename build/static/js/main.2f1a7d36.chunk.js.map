{"version":3,"sources":["App.js","components/Scream.js","pages/home.js","redux/actions/userActions.js","redux/types.js","pages/login.js","pages/signup.js","components/Navbar.js","util/AuthRoute.js","redux/reducers/userReducer.js","redux/reducers/uiReducer.js","redux/store.js","util/theme.js","serviceWorker.js","index.js","images/icon.png","images/react.png"],"names":["authenticated","Scream","dayjs","extend","relativeTime","this","props","classes","scream","body","createdAt","userImage","userHandle","screamId","likeCount","commentCount","Card","className","card","CardMedia","image","title","CardContent","content","Typography","variant","component","Link","to","color","fromNow","Component","withStyles","display","marginBottom","width","height","minWidth","padding","objectFit","home","state","screams","axios","get","then","res","setState","data","catch","err","console","log","recentScreamsMarkup","map","key","Grid","container","spacing","item","sm","xs","getUserData","dispatch","type","payload","login","handleSubmit","event","preventDefault","userData","email","password","loginUser","history","handleChange","target","name","value","errors","bind","nextProps","UI","loading","form","pageTitle","src","AppreactIcon","alt","image2","AppIcon","noValidate","onSubmit","TextField","id","label","textField","helperText","error","onChange","fullWidth","general","customError","Button","classsName","button","disabled","CircularProgress","size","progress","mapActionsToProps","post","FBIdToken","token","localStorage","setItem","defaults","header","common","push","response","connect","user","theme","spreadThis","signup","newUserData","confirmPassword","handle","Navbar","AppBar","Toolbar","AuthRoute","rest","render","initialState","credentials","likes","notifications","middleware","thunk","reducers","combineReducers","action","dataReducer","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","useNextVariants","textAlign","margin","marginTop","position","fontSize","jwt_decode","exp","Date","now","location","href","App","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2f1a7d36.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport jwt_decode from 'jwt-decode';\n\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\n// Pages\nimport home from './pages/home';\nimport login from './pages/login';\nimport signup from './pages/signup';\n\n// Components\nimport Navbar from './components/Navbar';\nimport AuthRoute from './util/AuthRoute';\nimport themeFile from './util/theme';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nconst theme = createMuiTheme(themeFile);\n\nlet authenticated;\n\nconst token = localStorage.FBIdToken;\n\nif(token) {\n  const decodedToken = jwt_decode(token);\n  if (decodedToken.exp * 10000 < Date.now()) {\n    window.location.href = '/login'\n    authenticated = false;\n  } else {\n    authenticated = true;\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Router>\n            <Navbar />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={home} />\n                <AuthRoute exact path=\"/login\" component={login} authenticated={authenticated} />\n                <AuthRoute exact path=\"/signup\" component={signup} authenticated={authenticated} />\n                {/* <Route exact path=\"/login\" component={login} />\n                <Route exact path=\"/signup\" component={signup} /> */}\n              </Switch>\n            </div>\n          </Router>\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n    card: {\r\n        display: 'flex',\r\n        marginBottom: 90,\r\n        width: \"80%\",\r\n        height: \"80%\"\r\n    },\r\n    image: {\r\n        minWidth: \"30%\",\r\n        height: \"100%\",\r\n    },\r\n    content: {\r\n        padding: 60,\r\n        objectFit: 'cover'\r\n    }\r\n}\r\n\r\nclass Scream extends Component {\r\n    render() {\r\n        dayjs.extend(relativeTime)\r\n        const { classes, scream: {body, createdAt, userImage, userHandle, screamId, likeCount, commentCount} } = this.props\r\n        return (\r\n            <Card className={classes.card}>\r\n                <CardMedia \r\n                    image={userImage}\r\n                    title=\"Profile Image\"\r\n                    className={classes.image} \r\n                />\r\n                <CardContent className={classes.content}>\r\n                    <Typography \r\n                        variant=\"h5\" \r\n                        component={Link} \r\n                        to={`/users/${userHandle}`}\r\n                        color=\"primary\"\r\n                    >\r\n                        {userHandle}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {dayjs(createdAt).fromNow()}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" color=\"textSecondary\">\r\n                        {body}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Scream);","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Scream from '../components/Scream';\r\n\r\nexport default class home extends Component {\r\n    state = {\r\n        screams: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/screams')\r\n            .then(res => {\r\n                this.setState({\r\n                    screams: res.data\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        let recentScreamsMarkup = this.state.screams ? (\r\n            this.state.screams.map(scream => <Scream key={scream.screamId} scream={scream} />)\r\n        ) : <p>Loading...</p>\r\n        return (\r\n            <Grid container spacing={16}>\r\n                <Grid item sm={8} xs={12}>\r\n                    {recentScreamsMarkup}\r\n                </Grid>\r\n                <Grid item sm={4} xs={12}>\r\n                    <p>Profile...</p>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n","import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI } from '../types';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (userData, history) => (dispatch) => {\r\n    dispatch({\r\n        type: LOADING_UI\r\n     });\r\n\r\n    axios\r\n        .post('/login', userData)\r\n        .then(res => {\r\n            const FBIdToken = `Bearer ${res.data.token}`\r\n            localStorage.setItem('FBIdToken', FBIdToken);\r\n            axios.defaults.header.common['Authorization'] = FBIdToken;\r\n            dispatch(getUserData());\r\n            dispatch({ type: CLEAR_ERRORS });\r\n        //  Redirect to 'url/' path(home page)\r\n            history.push('/');\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            });\r\n        });\r\n}\r\n\r\nexport const getUserData = () => (dispatch) =>  {\r\n    axios\r\n        .get('/user')\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_USER,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n}","// User reducer types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\r\nexport const SET_USER = 'SET_USER';\r\nexport const LOADING_USER = 'LOADING_USER';\r\n// UI reducer types\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n// Data reducer types","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/icon.png';\r\nimport AppreactIcon from '../images/react.png';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../redux/actions/userActions';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.spreadThis\r\n});\r\n\r\nclass login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errors: {}\r\n        }\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if (nextProps.UI.errors) {\r\n            this.setState({ errors: nextProps.UI.errors });\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        this.props.loginUser(userData, this.props.history)\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes, UI: { loading } } = this.props;\r\n        const { errors } = this.state;\r\n        return (\r\n            <Grid container className={classes.form}>    \r\n                <Typography variant=\"h3\" className={classes.pageTitle}>\r\n                        Created with react\r\n                        <img src={AppreactIcon} alt='media'  className={classes.image2}/>\r\n                </Typography>\r\n                <Grid item sm />\r\n                <Grid item sm >\r\n                    <img src={AppIcon} alt='media' className={classes.image} />\r\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\r\n                        LogIn\r\n                    </Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField \r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            type=\"email\" \r\n                            label=\"Email\"\r\n                            className={classes.textField}\r\n                            helperText={errors.email}\r\n                            error={errors.email ? true : false}\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        <TextField \r\n                            id=\"password\" \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            label=\"Password\"\r\n                            className={classes.textField}\r\n                            helperText={errors.password}\r\n                            error={errors.password ? true : false}\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button \r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            classsName={classes.button}\r\n                            disabled={loading}\r\n                        >\r\n                        login\r\n                        {loading && (\r\n                            <CircularProgress\r\n                                size={30}\r\n                                className={classes.progress}\r\n                            />\r\n                        )}\r\n                        </Button>\r\n                        <br />\r\n                        <br />\r\n                        <small>\r\n                            don't have an account ? signup <Link to=\"/signup\">here</Link>\r\n                        </small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm />\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nlogin.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    loginUser: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    loginUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(login));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/icon.png';\r\nimport AppreactIcon from '../images/react.png';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.spreadThis\r\n});\r\n\r\nclass signup extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            handle: '',\r\n            loading: false,\r\n            errors: {}\r\n        }\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        const newUserData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            handle: this.state.handle\r\n        }\r\n\r\n        axios.post('/signup', newUserData)\r\n            .then(res => {\r\n                // save the token\r\n               localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`);\r\n               this.setState({\r\n                   loading: false\r\n               });\r\n            //  Redirect to 'url/' path(home page)\r\n               this.props.history.push('/');\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    errors: err.response.data,\r\n                    loading: false\r\n                })\r\n            })\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { errors, loading } = this.state;\r\n        return (\r\n            <Grid container className={classes.form}>    \r\n                <Typography variant=\"h3\" className={classes.pageTitle}>\r\n                        Created with react\r\n                        <img src={AppreactIcon} alt='media'  className={classes.image2}/>\r\n                </Typography>\r\n                <Grid item sm />\r\n                <Grid item sm >\r\n                    <img src={AppIcon} alt='media' className={classes.image} />\r\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\r\n                        SignUp\r\n                    </Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField \r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            type=\"email\" \r\n                            label=\"Email\"\r\n                            className={classes.textField}\r\n                            helperText={errors.email}\r\n                            error={errors.email ? true : false}\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        <TextField \r\n                            id=\"password\" \r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            label=\"Password\"\r\n                            className={classes.textField}\r\n                            helperText={errors.password}\r\n                            error={errors.password ? true : false}\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        <TextField \r\n                            id=\"confirmPassword\" \r\n                            name=\"confirmPassword\" \r\n                            type=\"password\" \r\n                            label=\"Confirm Password\"\r\n                            className={classes.textField}\r\n                            helperText={errors.confirmPassword}\r\n                            error={errors.confirmPassword ? true : false}\r\n                            value={this.state.confirmPassword}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        <TextField \r\n                            id=\"handle\" \r\n                            name=\"handle\" \r\n                            type=\"text\" \r\n                            label=\"Handle\"\r\n                            className={classes.textField}\r\n                            helperText={errors.handle}\r\n                            error={errors.handle ? true : false}\r\n                            value={this.state.handle}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        \r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button \r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            classsName={classes.button}\r\n                            disabled={loading}\r\n                        >\r\n                        SignUp\r\n                        {loading && (\r\n                            <CircularProgress\r\n                                size={30}\r\n                                className={classes.progress}\r\n                            />\r\n                        )}\r\n                        </Button>\r\n                        <br />\r\n                        <small>\r\n                            Already have an account ? login <Link to=\"/login\">here</Link>\r\n                        </small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm />\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nsignup.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(signup);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Mat UI stuff\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <AppBar>\r\n                <Toolbar className=\"nav-container\">\r\n                    <Button color=\"inherit\" component={Link} to=\"/login\">Login</Button>\r\n                    <Button color=\"inherit\" component={Link} to=\"/\">Home</Button>\r\n                    <Button color=\"inherit\" component={Link} to=\"/signup\">Signup</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst AuthRoute = ({ component: Component, authenticated, ...rest}) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) => authenticated === true ? <Redirect to='/' /> : <Component {...props} />}\r\n    />\r\n)\r\n\r\nexport default AuthRoute","import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_AUTHENTICATED, SET_UNAUTHENTICATED } from '../types';\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n    credentials: {},\r\n    likes: [],\r\n    notifications: []\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: true\r\n            };\r\n        case SET_UNAUTHENTICATED:\r\n            return initialState;\r\n        case SET_USER:\r\n            return {\r\n                authenticated: true,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { SET_ERRORS, CLEAR_ERRORS, LOADING_UI } from '../types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    errors: null\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: null\r\n            };\r\n        case LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport userReducer from './reducers/userReducer';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    UI: uiReducer\r\n});\r\n\r\nconst store = createStore(reducers, \r\n    initialState, \r\n    compose(\r\n        applyMiddleware(...middleware), \r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )\r\n);\r\n\r\nexport default store;","import purple from '@material-ui/core/colors/purple';\r\n\r\nexport default {\r\n    palette: {\r\n        primary: {\r\n          light: '#33c9dc',\r\n          main: '#7944ff',\r\n          dark: '#008394',\r\n          contrastText: '#fff'\r\n        },\r\n        secondary: {\r\n          light: '#ff6333',\r\n          main: '#ff3d00',\r\n          dark: '#b22a00',\r\n          contrastText: '#fff'\r\n        }\r\n      },\r\n\r\n      spreadThis: {\r\n        typography: {\r\n            useNextVariants: true\r\n        },\r\n        form:{\r\n            textAlign: 'center'\r\n        },\r\n        image: {\r\n          width: 220,\r\n          height: 220,\r\n          margin: '10px auto 10px auto'\r\n        },\r\n        image2: {\r\n          width: 280,\r\n          height: 200,\r\n          margin: '10px auto 10px auto'\r\n        },\r\n        pageTitle: {\r\n            margin: '10px auto 10px auto',\r\n        },\r\n        textField: {\r\n            margin: '10px auto 10px auto',\r\n        },\r\n        button: {\r\n            marginTop: 20,\r\n            position: 'relative'\r\n        },\r\n        customError: {\r\n            color: 'red',\r\n            fontSize: '0.8rem',\r\n            marginTop: 10\r\n        },\r\n        progress: {\r\n            position: 'absolute'\r\n        }\r\n      }\r\n};\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon.e49a74f3.png\";","module.exports = __webpack_public_path__ + \"static/media/react.580ffd26.png\";"],"sourceRoot":""}